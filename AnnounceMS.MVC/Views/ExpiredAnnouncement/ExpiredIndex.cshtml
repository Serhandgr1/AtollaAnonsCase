@model List<AnnouncementDTO>
@{
    ViewData["Title"] = "Duyurular";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (TempData["ErrorMessage"] != null)
{
    <div id="errorAlert" class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}
<div class="container-fluid">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-sm-12">
            <div class="page-title-box">
                <div class="row align-items-center">
                    <div class="col">
                        <h4 class="page-title">Duyurular</h4>
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="javascript:void(0);">Duyuru Yönetimi</a></li>
                            <li class="breadcrumb-item active">Suresi Dolmus Duyurular</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Alert Messages -->
    @if (TempData["ErrorMessage"] != null)
    {
        <div id="errorAlert" class="alert alert-danger alert-dismissible fade show">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Data Table -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">  
                    @if (Model?.Count > 0)
                        {
                    <table id="announcementsTable" class="table table-striped table-bordered dt-responsive nowrap">
                      
                            <thead>
                                <tr>
                                    <th>Başlık</th>
                                    <th>Açıklama</th>
                                    <th>Başlangıç</th>
                                    <th>Bitiş</th>
                                    <th>Durum</th>
                                    <th>İşlemler</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@item.Title</td>
                                        <td>@item.Content</td>
                                        <td>@item.StartDate.ToString("dd/MM/yyyy HH:mm")</td>
                                        <td>@item.EndDate.ToString("dd/MM/yyyy HH:mm")</td>
                                        <td>
                                            <span class="badge @(item.IsActive ? "bg-success" : "bg-danger")">
                                                @(item.IsActive ? "Aktif" : "Pasif")
                                            </span>
                                        </td>
                                        <td>
                                            <button class="btn btn-sm btn-info me-2" onclick="editAnnouncement(@item.Id)">
                                                <i class="mdi mdi-pencil"></i>
                                            </button>
                                            <button class="btn btn-sm btn-danger" onclick="deleteAnnouncement(@item.Id)">
                                                <i class="mdi mdi-delete"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                    </table>  
                        }
                    else
                    {
                    <p class="text-center">Kayit Bulunamadi</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Update Modal -->
<div class="modal fade" id="updateAnnounce" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Duyuru Güncelle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="updateForm">
                    <input type="hidden" id="updateId" />
                    <div class="mb-3">
                        <label class="form-label">Başlık</label>
                        <input type="text" class="form-control" id="updateTitle" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Açıklama</label>
                        <textarea class="form-control" id="updateContent" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Başlangıç Tarihi</label>
                        <input type="datetime-local" class="form-control" id="updateStartDate" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Bitiş Tarihi</label>
                        <input type="datetime-local" class="form-control" id="updateEndDate" required>
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="updateIsActive">
                            <label class="form-check-label">Aktif</label>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-primary" id="sa-updateForm" onclick="updateAnnouncement()">Güncelle</button>
            </div>
        </div>
    </div>
</div>
@section scripts {
    <script>
        $(document).ready(function () {
            setTimeout(function () {
                $('#errorAlert').fadeOut('slow');
            }, 5000);
        });
    </script>
    <script>
        // Güncelleme İşlemi
        function editAnnouncement(id) {
            $.ajax({
                url: `/Announce/GetById?id=${id}`, // URL formatını düzelttik
                type: 'GET',
                success: function (data) {
                    if (data) {
                        $('#updateId').val(data.id);
                        $('#updateTitle').val(data.title);
                        $('#updateContent').val(data.content);
                        // Tarih formatını düzelt
                        $('#updateStartDate').val(moment(data.startDate).format('YYYY-MM-DDTHH:mm'));
                        $('#updateEndDate').val(moment(data.endDate).format('YYYY-MM-DDTHH:mm'));
                        $('#updateIsActive').prop('checked', data.isActive);
                        $('#updateAnnounce').modal('show');
                    } else {
                        alert('Duyuru bulunamadı');
                    }
                },
                error: function (xhr) {
                    alert('Duyuru yüklenirken bir hata oluştu: ' + (xhr.responseJSON?.message || 'Bilinmeyen hata'));
                }
            });
        }
        $('#sa-updateForm').click(function (event) {
            var startDateStr = $('#updateStartDate').val();
            var endDateStr = $('#updateEndDate').val();
            var form = document.getElementById('updateForm');
            // Formun geçerliliğini kontrol et
            if (form.checkValidity() === false) {
                // Eğer form geçerli değilse, gönderimi engelle
                event.preventDefault();
                form.classList.add('was-validated'); // 'was-validated' sınıfını ekle, hataları göster
            } else {
                var data = {
                    id: parseInt($('#updateId').val()),
                    title: $('#updateTitle').val(),
                    content: $('#updateContent').val(),
                    startDate: moment(startDateStr).format('YYYY-MM-DDTHH:mm:ss'),
                    endDate: moment(endDateStr).format('YYYY-MM-DDTHH:mm:ss'),
                    isActive: $('#updateIsActive').is(':checked')
                };

                $.ajax({
                    url: '/Announce/Update',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    success: function (response) {
                        if (response.success) {
                            $('#updateAnnounce').modal('hide');
                            location.reload();
                        } else {
                            alert(response.message || 'Güncelleme sırasında bir hata oluştu');
                        }
                    },
                    error: function (xhr) {
                        alert('Güncelleme sırasında bir hata oluştu: ' + (xhr.responseJSON?.message || 'Bilinmeyen hata'));
                    }
                });
            }

        });
        // DataTable ve diğer başlangıç ayarları
        $(document).ready(function () {
            $('#announcementsTable').DataTable({
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.10.24/i18n/Turkish.json'
                }
            });

            // Modal kapandığında formları temizle
            $('#createAnnounce').on('hidden.bs.modal', function () {
                $('#createForm')[0].reset();
            });

            $('#updateAnnounce').on('hidden.bs.modal', function () {
                $('#updateForm')[0].reset();
            });
        });
        function deleteAnnouncement(id) {
            if (confirm('Bu duyuruyu silmek istediğinizden emin misiniz?')) {
                $.ajax({
                    url: `/Announce/Delete?id=${id}`,
                    type: 'POST',
                    success: function (response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert(response.message || 'Silme işlemi sırasında bir hata oluştu');
                        }
                    },
                    error: function (xhr) {
                        alert('Silme işlemi sırasında bir hata oluştu: ' +
                            (xhr.responseJSON?.message || 'Bilinmeyen hata'));
                    }
                });
            }
        }
    </script>
}